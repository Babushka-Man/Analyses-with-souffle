.decl Evenness(id: number, type: irType<>)

// ----- dealing with literals -----
Evenness(id, $Even()) :- vertex(id, "Literal", _, numAsStr), @stoi(numAsStr) % 2 = 0. 
Evenness(id, $UnEven()) :- vertex(id, "Literal", _, numAsStr), @stoi(numAsStr) % 2 != 0. 

// ----- dealing with parameters -----
Evenness(id, $Bottom()) :- vertex(id, "Parameter", _, _).

// ----- dealing with operations -----
Evenness(srcId, @unaryOpOnType(type, op)) :- 
    vertex(srcId, "UnaryOperation", _, op),
    edge(srcId, dstId, "Data", "operand"),
    vertex(dstId, _, "Data", _),
    Evenness(dstId, type).

Evenness(srcId, @binaryOpOnTypes(type1, type2, op)) :- 
    vertex(srcId, "BinaryOperation", _, op),
    edge(srcId, dstId1, "Data", "left"),
    vertex(dstId1, _, "Data", _),
    Evenness(dstId1, type1),
    edge(srcId, dstId2, "Data", "right"),
    vertex(dstId2, _, "Data", _),
    Evenness(dstId2, type2).